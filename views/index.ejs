<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>The great button game</title>
    <link rel="stylesheet" type="text/css" href="css/styles.css"/>

    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script>
    <script type="text/javascript" src="/socket.io/socket.io.js"></script>

    <script type="text/javascript">
       // Assigns "socket" to the correct value
       // OR can sometimes use the commented out
       // line below:
       // var socket = io.connect();
       var socket = io.connect("http://localhost:6789");

        $(function() {

            $("button").on("click", function(e) {
                e.preventDefault();

                // When button element clicked
                // sends  a "client_count" emit
                // from index.ejs to server.js
                socket.emit("client_count", {action: "Button clicked"})

            });

            // Listens for the "server_counter"
            // emit coming from server.js
            // before taking an action
            socket.on("server_counter", function(action) {
                // the "action.response" value
                // is passed from the "server_counter"
                // emit from server.js and this value
                // is assigned to "counter" on server.js
                // which starts at 0 and increments
                // by 1, all on server.js
                $("#count").html(action.response);
            });

            $("#reset").on("click", function(e) {
                e.preventDefault();

                // Sends a "client_reset_count" emit from
                // index.ejs to server.js whenever the
                // "#reset" link is clicked
                socket.emit("client_reset_count", {action: "Counter reset"});
            });

            // Listens for a "server_reset_count"
            // full broadcast emit from server.js
            socket.on("server_reset_count", function(action) {
                // On a "server_reset_count"
                // full broadcast emit from "server.js"
                // sets the "#count" value to
                // the "action.zero" value
                // which is defined on "server.js"
                // as "counter", which is also assigned
                // to zero on server.js
                $("#count").html(action.zero);
            });

        });
    </script>
</head>
<body>

<div id="wrapper">

    <h1>This button has been pushed <span id="count"></span> time(s)</h1>

    <p>Push the button to update the count!<br /><button>Push the epic button</button></p>

    <p>&nbsp;</p>
    <p>&nbsp;</p>
    <p><a id="reset" href="reset">RESET COUNT</a></p>


</div>

</body>
</html>